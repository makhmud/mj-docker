version: '2'

services:

### Applications Code Container #############################

    applications:
        image: tianon/true
        volumes:
            - /var/www/swp/:/var/www/swp
            - /var/www/volt/neos/:/var/www/volt/neos
            - /var/www/volt/store/:/var/www/volt/store
            - /var/www/adminer/:/var/www/adminer
#            - ../sample/:/var/www/sample

### Workspace Utilities Container ###########################

    workspace:
        build:
            context: ./workspace
            args:
                - INSTALL_XDEBUG=true
                - INSTALL_SOAP=false
                - INSTALL_MONGO=false
                - INSTALL_NODE=false
                - INSTALL_YARN=false
                - INSTALL_DRUSH=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - INSTALL_V8JS_EXTENSION=false
                - COMPOSER_GLOBAL_INSTALL=false
                - INSTALL_WORKSPACE_SSH=false
                - INSTALL_LARAVEL_ENVOY=false
                - INSTALL_DEPLOYER=false
                - INSTALL_LINUXBREW=false
                - INSTALL_MC=false
                - PUID=1000
                - PGID=1000
                - NODE_VERSION=stable
                - YARN_VERSION=latest
                - TZ=UTC
        volumes_from:
            - applications
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        ports:
           - "2222:22"
        tty: true

### PHP-FPM Container #######################################

    php-fpm:
        build:
            context: ./php-fpm
            args:
                - INSTALL_XDEBUG=false
                - INSTALL_SOAP=false
                - INSTALL_MONGO=false
                - INSTALL_ZIP_ARCHIVE=false
                - INSTALL_BCMATH=false
                #- INSTALL_PHPREDIS=false
                - INSTALL_MEMCACHED=false
                - INSTALL_OPCACHE=false
                #- INSTALL_EXIF=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - CODEIGNITER=false
            dockerfile: Dockerfile-71
        volumes_from:
            - applications
        expose:
            - "9000"
        links:
            - workspace
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `laravel`
            - PHP_IDE_CONFIG=serverName=laravel

### Nginx Server Container ##################################

    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM=php-fpm
        volumes_from:
            - applications
        volumes:
            - ./logs/nginx/:/var/log/nginx
            - ./nginx/sites/:/etc/nginx/sites-available
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm

### Minio Container #########################################

#    minio:
#        build: ./minio
#        volumes:
#            - minio:/export
#        ports:
#          - "9000:9000"
#        environment:
#          MINIO_ACCESS_KEY: access
#          MINIO_SECRET_KEY: secretkey

### MySQL Container #########################################

    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_DATABASE=homestead
                - MYSQL_USER=homestead
                - MYSQL_PASSWORD=secret
                - MYSQL_ROOT_PASSWORD=123123
        volumes:
            - mysql:/var/lib/mysql
        ports:
            - "9999:3306"

### MongoDB Container #######################################

#    mongo:
#        build: ./mongo
#        ports:
#            - "27017:27017"
#        volumes:
#            - mongo:/data/db

### Redis Container #########################################

#    redis:
#        build: ./redis
#        volumes:
#            - redis:/data
#        ports:
#            - "6379:6379"

### Memcached Container #####################################

#    memcached:
#        build: ./memcached
#        volumes:
#            - memcached:/var/lib/memcached
#        ports:
#            - "11211:11211"
#        links:
#            - php-fpm

### RabbitMQ Container ######################################

#    rabbitmq:
#        build: ./rabbitmq
#        ports:
#            - "5672:5672"
#            - "15671:15671"
#            - "8080:15672"
#        privileged: true
#        environment:
#            RABBITMQ_DEFAULT_USER: guest
#            RABBITMQ_DEFAULT_PASS: guest
#        links:
#            - php-fpm

### Caddy Server Container ##################################

#    caddy:
#        build: ./caddy
#        ports:
#            - "80:80"
#            - "443:443"
#            - "2015:2015"
#        volumes_from:
#            - applications
#        volumes:
#            - ./caddy/Caddyfile:/etc/Caddyfile
#            - ./logs/caddy:/var/log/caddy
#            - caddy:/root/.caddy
#        links:
#            - php-fpm

### phpMyAdmin Container ####################################

#    phpmyadmin:
#        build: ./phpmyadmin
#        environment:
#            PMA_ARBITRARY: 1
#            MYSQL_USER: homestead
#            MYSQL_PASSWORD: secret
#            MYSQL_ROOT_PASSWORD: 123123
#        ports:
#            - "8888:80"
#        links:
#            # for mysql container
#            - "mysql:db"
#            # for mariadb container
#            # - "mariadb:db"

### ElasticSearch Container #################################

#    elasticsearch:
#        build: ./elasticsearch
#        volumes:
#            - elasticsearch-data:/usr/share/elasticsearch/data
#            - elasticsearch-plugins:/usr/share/elasticsearch/data
#        ports:
#            - "9200:9200"
#            - "9300:9300"
#        links:
#            - php-fpm

### Selenium Container #########################################

#    selenium:
#        build: ./selenium
#        ports:
#            - "4444:4444"
#        volumes:
#            # see https://github.com/SeleniumHQ/docker-selenium#running-the-images
#            - /dev/shm:/dev/shm

### Volumes Setup ###########################################

volumes:
    mysql:
        driver: "local"
    memcached:
        driver: "local"
    redis:
        driver: "local"
    mongo:
        driver: "local"
    minio:
        driver: "local"
    phpmyadmin:
        driver: "local"
    caddy:
        driver: "local"
    elasticsearch-data:
        driver: "local"
    elasticsearch-plugins:
        driver: "local"
    sessions:    ## nothing is connected to this (- ./data/sessions:/sessions)
        driver: "local"
